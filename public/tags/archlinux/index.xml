<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>ArchLinux - Tag - My New Hugo Site</title>
    <link>https://example.org/tags/archlinux/</link>
    <description>ArchLinux - Tag - My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 26 Oct 2023 12:08:52 &#43;0800</lastBuildDate><atom:link href="https://example.org/tags/archlinux/" rel="self" type="application/rss+xml" /><item>
  <title>ArchLinux安装</title>
  <link>https://example.org/posts/archlinux_install/</link>
  <pubDate>Thu, 26 Oct 2023 12:08:52 &#43;0800</pubDate>
  <author>Author</author>
  <guid>https://example.org/posts/archlinux_install/</guid>
  <description><![CDATA[下载 archlinux 镜像 制作启动盘 sudo dd if=/path/to/xxx.iso of=/dev/nvme0n1 bs=4M oflag=sync status=progress进入 live 环境开始安装 分区 cfdisk /dev/nvme0n1 分两个区 /dev/nvme0n1p1 # efi 分区 /dev/nvme0n1p2 # linux system 分区格式化分区 mkfs.efi -F 32 /dev/nvme0n1p1 mkfs.btrfs -L ARCH /dev/nvme0n1p2 ----- 使用 `lsblk -f` 命令查看分区信息创建 btrfs 子卷 挂载系统分区 mount --mkdir -t btrfs -o compress=zstd /dev/nvme0n1p2 /tmp/btrfs-root ----- 创建子卷 btrfs subvolume create /dev/nvme0n1p2 /tmp/btrfs-root/@ # 根目录 btrfs subvolume create /dev/nvme0n1p2 /tmp/btrfs-root/@home # 家目录 btrfs subvolume create /dev/nvme0n1p2 /tmp/btrfs-root/@swap # 交换文件 ----- 把交换文件子卷写时复制(cow)功能关闭 chattr +C /tmp/btrfs-root/@swap ----- 卸载 umount /tmp/btrfs-root挂载分区准备安装 mount --mkdir /dev/nvme0n1p1 /mnt/boot/efi ----- mount --mkdir -t btrfs -o compress=zstd,subvol=@ /dev/nvme0n1p2 /mnt mount --mkdir -t btrfs -o subvol=@home /dev/nvme0n1p2 /mnt/home mount --mkdir -t btrfs -o subvol=@swap /dev/nvme0n1p2 /mnt/swap ----- 创建交换文件 btrfs filesystem mkswapfile /mnt/swap/swapfile --uuid clear --size 16G # 大小自行确定正式安装前先配置好网络 ip link # 查看网卡信息 rfkill list # 查看蓝牙和 wifi 功能是否被关闭 rfkill unblock wlan # 如果 wifi 功能被关闭就启用 ----- 输入 iwctl 命令进入 iw 工具的命令行 device list # 列出可用网卡 station wlan0 scan # 扫描可用网络 station wlan0 get-network # 获取可用 wifi station wlan0 connect wifi名 wifi密码 # 连接 wifi，没有密码可以不用输入 ----- ctrl + d # 退出 iw 工具命令行 ping -c 3 t.]]></description>
</item>
</channel>
</rss>
